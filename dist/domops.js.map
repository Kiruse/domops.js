{"version":3,"file":"domops.js","mappings":"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","sources":["webpack://domops/webpack/bootstrap","webpack://domops/webpack/runtime/define property getters","webpack://domops/webpack/runtime/hasOwnProperty shorthand","webpack://domops/./dist/domops.esm.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","//////////////////////////////////////////////////////////////////////\r\n// A minimalist's interpretation of jQuery for DOM traversal & manipulation.\r\n// -----\r\n// Copyright (c) Kiruse 2021. Licensed under MIT License\r\n\"use strict\";\r\nexport default function $(...args) { return new DocQuery(...args); }\r\nlet docready = false;\r\n$.create = function (tag) {\r\n    return new DocQuery(document.createElement(tag));\r\n};\r\ndocument.addEventListener('DOMContentLoaded', () => docready = true);\r\n$.onready = function (cb) {\r\n    if (docready) {\r\n        cb();\r\n    }\r\n    else {\r\n        document.addEventListener('DOMContentLoaded', cb);\r\n    }\r\n};\r\n$.onhash = function (callback) {\r\n    globalThis.addEventListener('hashchange', callback);\r\n};\r\n$.hash = function () {\r\n    const hash = location.hash;\r\n    return hash.startsWith('#') ? hash.substr(1) : hash;\r\n};\r\n$.target = () => new DocQuery('#' + $.hash());\r\n/**\r\n * async/await enabled `setTimeout` for convenience.\r\n * @param timeout in seconds to delay the async operation by.\r\n * @returns the actually passed time - will be negligibly close to requested timeout\r\n */\r\n$.delay = (timeout) => new Promise((resolve) => {\r\n    const t1 = Date.now();\r\n    setTimeout(() => resolve(Date.now() - t1), timeout);\r\n});\r\nexport class ArgumentError extends Error {\r\n}\r\nexport class DocQuery {\r\n    selector;\r\n    relative;\r\n    elements;\r\n    length;\r\n    constructor(...args) {\r\n        if (args.length === 0)\r\n            throw new ArgumentError('no arguments passed');\r\n        if (Array.isArray(args[0])) {\r\n            this.relative = [];\r\n            this.elements = args[0];\r\n        }\r\n        else {\r\n            if (typeof (args[0]) === 'string') {\r\n                this.selector = args[0];\r\n                if (args.length < 2)\r\n                    this.relative = [document];\r\n                else\r\n                    this.relative = unique(ensureArray(args[1]));\r\n                if (!Array.isArray(this.relative))\r\n                    this.relative = [this.relative];\r\n                this.elements = DocQuery._query(this.selector, this.relative);\r\n            }\r\n            else {\r\n                this.relative = [];\r\n                this.elements = args;\r\n            }\r\n        }\r\n        for (let i = 0; i < this.elements.length; ++i) {\r\n            this[i] = this.elements[i];\r\n        }\r\n        this.length = this.elements.length;\r\n    }\r\n    /**\r\n     * Descend further down the DOM of each element in the current selection filtering for children matching the given selector.\r\n     * @see HTMLElement.querySelectorAll\r\n     * @param selector new selector to apply\r\n     * @returns new DocQuery containing all matching elements\r\n     */\r\n    query(selector) {\r\n        return new DocQuery(selector, this.elements);\r\n    }\r\n    /**\r\n     * Isolate a single element from the current selection.\r\n     * @param index of the element of the current selection to isolate\r\n     * @returns new DocQuery containing only the indexed element\r\n     */\r\n    at(...indices) {\r\n        if (indices.length === 0)\r\n            return [];\r\n        return new DocQuery(...indices.map(i => this.elements[i]).filter(e => !!e));\r\n    }\r\n    /**\r\n     * Isolate every nth element of the current selection in a new selection.\r\n     * @param n distance between elements\r\n     * @returns new DocQuery containing only every nth element\r\n     */\r\n    nth(n) {\r\n        return new DocQuery(...this.elements.filter((_, i) => i % n === 0));\r\n    }\r\n    attr(...args) {\r\n        if (args.length === 0)\r\n            throw new ArgumentError('no arguments');\r\n        if (args.length === 1) {\r\n            if (typeof (args[0]) === 'object')\r\n                return this._attr_obj(args[0]);\r\n            else\r\n                return this._attr_get(args[0]);\r\n        }\r\n        else {\r\n            return this._attr_set(args[0], args[1]);\r\n        }\r\n    }\r\n    _attr_get(name) {\r\n        return this.elements.map(e => e.getAttribute(name));\r\n    }\r\n    _attr_set(name, value) {\r\n        this.elements.forEach(e => e.setAttribute(name, value));\r\n        return this;\r\n    }\r\n    _attr_obj(props) {\r\n        for (let prop in props) {\r\n            if (props.hasOwnProperty(prop)) {\r\n                this._attr_set(prop, props[prop]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    data(...args) {\r\n        if (args.length === 0)\r\n            throw new ArgumentError('no arguments');\r\n        if (args.length === 1) {\r\n            if (typeof (args[0]) === 'object')\r\n                return this._data_obj(args[0]);\r\n            else\r\n                return this._attr_get('data-' + args[0]);\r\n        }\r\n        else {\r\n            return this._attr_set('data-' + args[0], args[1]);\r\n        }\r\n    }\r\n    _data_obj(props) {\r\n        for (let attr in props) {\r\n            if (props.hasOwnProperty(attr)) {\r\n                this._attr_set('data-' + attr, props[attr]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    text(arg) {\r\n        if (arg === undefined) {\r\n            return this.elements.map(e => e.innerText);\r\n        }\r\n        if (typeof (arg) === 'function') {\r\n            for (let i = 0; i < this.elements.length; ++i) {\r\n                this.elements[i].innerText = arg(this.elements[i], i, this.elements);\r\n            }\r\n            return this;\r\n        }\r\n        else {\r\n            this.elements.forEach(el => el.innerText = arg);\r\n            return this;\r\n        }\r\n    }\r\n    html(arg) {\r\n        if (arg === undefined) {\r\n            return this.elements.map(e => e.innerHTML);\r\n        }\r\n        if (typeof (arg) === 'function') {\r\n            for (let i = 0; i < this.elements.length; ++i) {\r\n                this.elements[i].innerHTML = arg(this.elements[i], i, this.elements);\r\n            }\r\n            return this;\r\n        }\r\n        else {\r\n            this.elements.forEach(el => el.innerHTML = arg);\r\n            return this;\r\n        }\r\n    }\r\n    value(val) {\r\n        if (val === undefined) {\r\n            return this.elements.map(el => el.value);\r\n        }\r\n        else {\r\n            this.elements.forEach((el, i, ary) => {\r\n                const input = el;\r\n                input.value = typeof (val) === 'function' ? val(el, i, ary) : val;\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n    style(...args) {\r\n        if (args.length === 0)\r\n            throw new ArgumentError('no arguments');\r\n        if (args.length === 1) {\r\n            if (typeof (args[0]) === 'object')\r\n                return this._style_obj(args[0]);\r\n            else\r\n                return this._style_get(args[0]);\r\n        }\r\n        else {\r\n            return this._style_set(args[0], args[1]);\r\n        }\r\n    }\r\n    show(display = 'initial') {\r\n        return this.style({ display });\r\n    }\r\n    hide(display = 'none') {\r\n        return this.style({ display });\r\n    }\r\n    /**\r\n     * Get the absolute location on the page of each element in the current selection.\r\n     * @returns Array of 2-tuples [[x, y]]\r\n     */\r\n    location() {\r\n        return this.elements.map(this._elementLocation.bind(this));\r\n    }\r\n    _elementLocation(el) {\r\n        const result = [0, 0];\r\n        while (el) {\r\n            result[0] += el.offsetLeft;\r\n            result[1] += el.offsetTop;\r\n            el = el.offsetParent;\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * Get the absolute size of each element in the current selection.\r\n     * @returns Array of 2-tuples [[x, y]]\r\n     */\r\n    size() {\r\n        return this.elements.map(el => [el.offsetWidth, el.offsetHeight]);\r\n    }\r\n    /**\r\n     * Get the offsets of each element relative to their individual offset parents.\r\n     * The offset parent is the first ancestor element with CSS display set to anything but 'static'. In other words,\r\n     * it's the element considered as the anchor point by CSS.\r\n     *\r\n     * `right` and `bottom` are regular distances, i.e. distance from anchor parent's left border to element's right\r\n     * border respectively.\r\n     *\r\n     * @returns Array of 4-tuples [[left, top, right, bottom]]\r\n     */\r\n    box({ absolute } = {}) {\r\n        return this.elements.map(el => {\r\n            const [x, y] = absolute ? this._elementLocation(el) : [el.offsetLeft, el.offsetTop];\r\n            const [w, h] = [el.offsetWidth, el.offsetHeight];\r\n            return [x, y, x + w, y + h];\r\n        });\r\n    }\r\n    /**\r\n     * Get the offsets of each element relative to their individual offset parents as CSS-compatible objects array.\r\n     *\r\n     * Unlike {@see box}, `right` and `bottom` properties are reversed distances, i.e. distance from anchor parent's\r\n     * right border to element's own right border respectively.\r\n     *\r\n     * @returns Array of CSS location objects [{top, left, right, bottom}]\r\n     */\r\n    cssBox() {\r\n        return this.elements.map(el => {\r\n            const parent = el.offsetParent ?? document.body;\r\n            const [pw, ph] = [parent.offsetWidth, parent.offsetHeight];\r\n            const [x, y] = [el.offsetLeft, el.offsetTop];\r\n            const [w, h] = [el.offsetWidth, el.offsetHeight];\r\n            return {\r\n                top: y,\r\n                left: x,\r\n                right: pw - (x + w),\r\n                bottom: ph - (y + h),\r\n            };\r\n        });\r\n    }\r\n    _style_get(name) {\r\n        return this.elements.map(e => getComputedStyle(e)[name]);\r\n    }\r\n    _style_set(name, value) {\r\n        this.elements.forEach((e) => e.style[name] = value); // for some reason TypeScript is unaware of style property\r\n        return this;\r\n    }\r\n    _style_obj(props) {\r\n        for (let prop in props) {\r\n            if (props.hasOwnProperty(prop)) {\r\n                this._style_set(prop, props[prop]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    addClass(...classes) {\r\n        this.elements.forEach(e => e.classList.add(...classes));\r\n        return this;\r\n    }\r\n    removeClass(...classes) {\r\n        this.elements.forEach(e => e.classList.remove(...classes));\r\n        return this;\r\n    }\r\n    hasClass(cls) {\r\n        return this.elements.map(e => e.classList.contains(cls));\r\n    }\r\n    on(evt, handler) {\r\n        const events = evt.split(/\\s+/);\r\n        for (let elem of this.elements) {\r\n            for (let event of events) {\r\n                elem.addEventListener(event, handler);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    forEach(cb) {\r\n        this.elements.forEach(cb);\r\n        return this;\r\n    }\r\n    /**\r\n     * Filter elements from the current selection for which the given predicate returns true.\r\n     * @param predicate by which to filter selection.\r\n     * @returns new selection containing filtered elements.\r\n     */\r\n    filter(predicate) {\r\n        return new DocQuery(...this.elements.filter(predicate));\r\n    }\r\n    /**\r\n     * Transform each element in the current selection and return the new selection.\r\n     * @param cb transformer to apply\r\n     * @returns new selection of transformed elements\r\n     */\r\n    map(cb) {\r\n        return new DocQuery(...this.elements.map(cb));\r\n    }\r\n    /**\r\n     * Attach every element in the current selection to the given parent element.\r\n     * @param parent parent element to attach to\r\n     * @returns this selection\r\n     */\r\n    attachTo(parent) {\r\n        if (parent instanceof DocQuery) {\r\n            parent = parent[0];\r\n        }\r\n        this.elements.forEach(e => parent.appendChild(e));\r\n        return this;\r\n    }\r\n    /**\r\n     * Attach given children to the current selection's first element.\r\n     * @note elements can only be parented to at most one element, thus attaching to all elements in the selection is impossible.\r\n     * @note if the selection is empty, given children will be detached from the entire document instead\r\n     * @param children to attach\r\n     * @return this selection\r\n     */\r\n    attach(...children) {\r\n        if (this.elements.length === 0) {\r\n            children.forEach(child => {\r\n                if (typeof child === 'object')\r\n                    child.parentElement.removeChild(child);\r\n            });\r\n        }\r\n        else {\r\n            children.forEach(child => this.elements[0].appendChild(typeof child === 'string' ? document.createTextNode(child) : child));\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Detach the current selection from their parent elements.\r\n     * @note The elements in this selection will be effectively removed from the DOM until reattached.\r\n     * @see attach, attachTo\r\n     * @returns this selection\r\n     */\r\n    detach() {\r\n        for (let el of this.elements) {\r\n            el.parentElement.removeChild(el);\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Gets the parent element of every element in the current selection.\r\n     * If multiple elements share a parent, that parent is added only once.\r\n     * @returns new selection of parent elements\r\n     */\r\n    parent() {\r\n        const parents = [];\r\n        for (let elem of this.elements) {\r\n            if (parents.indexOf(elem.parentElement) === -1) {\r\n                parents.push(elem.parentElement);\r\n            }\r\n        }\r\n        return new DocQuery(...parents);\r\n    }\r\n    /**\r\n     * Detach all children from the elements of the current selection.\r\n     * @returns this selection\r\n     */\r\n    empty() {\r\n        for (let el of this.elements) {\r\n            for (let child of el.children) {\r\n                el.removeChild(child);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    static _query(selector, relative) {\r\n        return relative.map(r => [...r.querySelectorAll(selector)]).flat(1);\r\n    }\r\n}\r\nfunction unique(arr) {\r\n    for (let i = 0; i < arr.length; ++i) {\r\n        for (let j = i + 1; j < arr.length;) {\r\n            if (arr[i] === arr[j]) {\r\n                arr.splice(j, 1);\r\n                continue;\r\n            }\r\n            else {\r\n                ++j;\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\nconst ensureArray = x => Array.isArray(x) ? x : [x];\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","$","args","DocQuery","docready","create","tag","document","createElement","addEventListener","onready","cb","onhash","callback","globalThis","hash","location","startsWith","substr","target","delay","timeout","Promise","resolve","t1","Date","now","setTimeout","ArgumentError","Error","selector","relative","elements","length","constructor","Array","isArray","this","arr","i","j","splice","unique","ensureArray","_query","query","at","indices","map","filter","e","nth","n","_","attr","_attr_obj","_attr_get","_attr_set","name","getAttribute","value","forEach","setAttribute","props","data","_data_obj","text","arg","undefined","innerText","el","html","innerHTML","val","ary","style","_style_obj","_style_get","_style_set","show","display","hide","_elementLocation","bind","result","offsetLeft","offsetTop","offsetParent","size","offsetWidth","offsetHeight","box","absolute","x","y","w","h","cssBox","parent","body","pw","ph","top","left","right","bottom","getComputedStyle","addClass","classes","classList","add","removeClass","remove","hasClass","cls","contains","on","evt","handler","events","split","elem","event","predicate","attachTo","appendChild","attach","children","child","parentElement","removeChild","createTextNode","detach","parents","indexOf","push","empty","r","querySelectorAll","flat"],"sourceRoot":""}